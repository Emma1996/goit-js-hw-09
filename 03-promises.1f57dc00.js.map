{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,SAAUA,EAAUS,MAAOR,IAErCM,EAAO,CAAEP,SAAUA,EAAUS,MAAOR,G,GAErCA,E,IAZPS,EAAAb,GAASc,OAAOC,OAiBhB,IAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAOJ,SAASC,cAAc,QA0BpCG,EAAKC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAIC,iBAzBe,WAKnB,IAJA,IAAMC,EAAcC,OAAOC,SAASP,EAAOQ,OACrCC,EAAaH,OAAOC,SAASX,EAAMY,OACnCE,EAAiBJ,OAAOC,SAASR,EAAKS,OAEnCG,EAAI,EAAGA,EAAIN,EAAaM,IAC/BC,QAAQC,IAAIJ,EAAYC,GAQxB5B,EAAc6B,EANL,GAALA,EACML,OAAOC,SAASE,GAEhBH,OAAOC,SAASE,EAAaC,EAAiBC,IAIrDG,MAAK,SAAAC,G,IAAGhC,EAAQgC,EAARhC,SAAUiC,EAAKD,EAALvB,M,OACjBC,EAAAb,GAASc,OAAOuB,QAAQ,qBAAoCC,OAAfnC,EAAS,QAAYmC,OAANF,EAAM,M,IAEnEG,OAAM,SAAAJ,G,IAAGhC,EAAQgC,EAARhC,SAAUqC,EAAKL,EAALvB,M,OAClBC,EAAAb,GAASc,OAAO2B,QAAQ,oBAAmCH,OAAfnC,EAAS,QAAYmC,OAANE,EAAM,M,IAOvEE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init();\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n\n// prepare html elements\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('form');\n\nconst onFormSubmit = () => {\n  const amountValue = Number.parseInt(amount.value);\n  const firstDelay = Number.parseInt(delay.value);\n  const stepDelayValue = Number.parseInt(step.value);\n\n  for (let i = 0; i < amountValue; i++) {\n    console.log(firstDelay, stepDelayValue);\n    let delay = 0;\n    if (i == 0) {\n      delay = Number.parseInt(firstDelay);\n    } else {\n      delay = Number.parseInt(firstDelay + stepDelayValue * i);\n    }\n\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n};\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n  onFormSubmit();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","$parcel$interopDefault","Notify","init","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","addEventListener","evt","preventDefault","amountValue","Number","parseInt","value","firstDelay","stepDelayValue","i","console","log","then","param","delay3","success","concat","catch","delay4","failure","$ce04d3a99e08e73b$var$onFormSubmit"],"version":3,"file":"03-promises.1f57dc00.js.map"}