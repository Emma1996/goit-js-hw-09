{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CAAEN,SAAUA,EAAUS,MAAOR,IAErCM,EAAO,CAAEP,SAAUA,EAAUS,MAAOR,GAAQ,GAE7CA,EAAM,G,CAZbS,EAAAb,GAASc,OAAOC,OAiBhB,MAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAOJ,SAASC,cAAc,QA0BpCG,EAAKC,iBAAiB,UAAUC,IAC9BA,EAAIC,iBAzBe,MACnB,MAAMC,EAAcC,OAAOC,SAASP,EAAOQ,OACrCC,EAAaH,OAAOC,SAASX,EAAMY,OACnCE,EAAiBJ,OAAOC,SAASR,EAAKS,OAE5C,IAAK,IAAIG,EAAI,EAAGA,EAAIN,EAAaM,IAAK,CACpCC,QAAQC,IAAIJ,EAAYC,GACxB,IAAII,EAAQ,EAEVA,EADO,GAALH,EACML,OAAOC,SAASE,GAEhBH,OAAOC,SAASE,EAAaC,EAAiBC,GAGxD7B,EAAc6B,EAAGG,GACdC,MAAK,EAAChC,SAAEA,EAAUS,MAAAwB,KACjBvB,EAAAb,GAASc,OAAOuB,QAAQ,qBAAqBlC,QAAeiC,SAE7DE,OAAM,EAACnC,SAAEA,EAAUS,MAAA2B,KAClB1B,EAAAb,GAASc,OAAO0B,QAAQ,oBAAoBrC,QAAeoC,Q,GAOjEE,EAAc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init();\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n\n// prepare html elements\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('form');\n\nconst onFormSubmit = () => {\n  const amountValue = Number.parseInt(amount.value);\n  const firstDelay = Number.parseInt(delay.value);\n  const stepDelayValue = Number.parseInt(step.value);\n\n  for (let i = 0; i < amountValue; i++) {\n    console.log(firstDelay, stepDelayValue);\n    let delay = 0;\n    if (i == 0) {\n      delay = Number.parseInt(firstDelay);\n    } else {\n      delay = Number.parseInt(firstDelay + stepDelayValue * i);\n    }\n\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n};\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n  onFormSubmit();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","$parcel$interopDefault","Notify","init","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$form","addEventListener","evt","preventDefault","amountValue","Number","parseInt","value","firstDelay","stepDelayValue","i","console","log","delay2","then","delay3","success","catch","delay4","failure","$47d4ff9957288465$var$onFormSubmit"],"version":3,"file":"03-promises.0594d36e.js.map"}